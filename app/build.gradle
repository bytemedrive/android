buildscript {
    ext {
        compose_version = '1.2.0'
        compose_material_version = '1.4.3'
        ktor_version = '2.2.3'
        koin_version = '3.4.3'
        accompaniest_version = '0.30.1'
        room_version = '2.5.2'
        sqlcipher_version = '4.5.5'
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.bytemedrive'
    compileSdk 33

    defaultConfig {
        applicationId "com.bytemedrive"
        minSdk 29
        targetSdk 33
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }

        buildConfigField "String", "STRIPE_PUBLISHABLE_KEY_TEST", "\"pk_test_51N7wTaL2hkomI7ZgL9WwjYWPcJV5UIUpCyRsBgsj1kzzeaOKBuwZzDO5V6Ejwdgln7udEGIFK4sT8l3dt09zIHJ900HOjKJ74S\""
        buildConfigField "String", "STRIPE_PUBLISHABLE_KEY_LIVE", "\"pk_live_51N7wTaL2hkomI7ZgfknhTcLD5Wm8vwznCAc2di6AJpQBCStR29JOQShEz0UZ5zcVrzIxRNsLjo0XaQNPLEin6RJW002zHv4x9o\""
        buildConfigField "String", "BACKEND_URL", "\"${project.getProperties().getOrDefault("BACKEND_URL", "https://dev.bytemedrive.com/")}\""
    }

    signingConfigs {
        release {
            storeFile = file("keystore/bytemedrive-keystore.jks")
            storePassword System.getenv("KEY_STORE_PASSWORD")
            keyAlias System.getenv("ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    /* Rename APK bundle */
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "bytemedrive-${defaultConfig.versionName}.apk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.security:security-crypto:1.0.0"

    implementation "androidx.paging:paging-runtime:3.1.1"
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // Accompanist version must equal to version of material-ui, see https://google.github.io/accompanist/#compose-versions
    implementation "com.google.accompanist:accompanist-placeholder-material:$accompaniest_version"
    implementation "com.google.accompanist:accompanist-navigation-material:$accompaniest_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompaniest_version"

    implementation "androidx.compose.material:material:$compose_material_version"
    implementation "androidx.compose.material:material-icons-core:$compose_material_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_material_version"

    implementation 'androidx.compose.material3:material3:1.0.1'

    implementation 'com.google.crypto.tink:tink-android:1.12.0'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "net.zetetic:sqlcipher-android:$sqlcipher_version@aar"

    implementation 'androidx.documentfile:documentfile:1.0.1'

    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-serialization-jackson:$ktor_version"

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2")

    // Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:3.4.6"

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'

    implementation 'androidx.media3:media3-common:1.0.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    implementation('com.stripe:stripe-android:20.31.0') {
        exclude group: 'org.bouncycastle'
    }
    implementation 'androidx.exifinterface:exifinterface:1.3.6'

    implementation "io.coil-kt:coil-compose:2.4.0"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

/* Rename AAB bundle */
tasks.whenTaskAdded { task ->
    if (task.name.startsWith("bundle")) {
        def renameTaskName = "rename${task.name.capitalize()}Aab"
        def flavor = task.name.substring("bundle".length()).uncapitalize()
        tasks.create(renameTaskName, Copy) {
            def path = "${buildDir}/outputs/bundle/${flavor}/"
            from(path)
            include "app-${flavor}.aab"
            destinationDir file("${buildDir}/outputs/renamedBundle/")
            rename "app-${flavor}.aab", "bytemedrive-${android.defaultConfig.versionName}.aab"
        }

        task.finalizedBy(renameTaskName)
    }
}

task printReleaseVersion {
    doLast {
        println(android.defaultConfig.versionName.split("-")[0])
    }
}

task setVersionName {
    doLast {
        if (!project.hasProperty("versionName")) {
            println("Missing `versionName` parameter")

            return
        }

        ant.propertyfile(file: "../gradle.properties") {
            entry(key: "VERSION_NAME", value: "${project.property("versionName")}")
        }
    }
}

task printVersionCode {
    doLast {
        println(android.defaultConfig.versionCode)
    }
}

task setVersionCode {
    doLast {
        if (!project.hasProperty("versionCode")) {
            println("Missing `versionCode` parameter")

            return
        }

        ant.propertyfile(file: "../gradle.properties") {
            entry(key: "VERSION_CODE", value: "${project.property("versionCode")}")
        }
    }
}
